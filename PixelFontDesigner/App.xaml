<Application x:Class="JonathanRuisi.PixelFontDesigner.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:p="clr-namespace:JonathanRuisi.PixelFontDesigner.Properties"
			 xmlns:wpfControlLibrary="clr-namespace:JLR.Utility.WPF;assembly=JLR.Utility.WPF"
			 StartupUri="MainWindow.xaml">
	<Application.Resources>

		<!-- Brushes -->
		<DrawingBrush x:Key="TransparencyCheckerboardDrawingBrush"
					  Stretch="None" TileMode="Tile" Viewport="0,0,4,4" ViewportUnits="Absolute">
			<DrawingBrush.Drawing>
				<DrawingGroup>
					<GeometryDrawing Brush="White">
						<GeometryDrawing.Geometry>
							<RectangleGeometry Rect="0,0,4,4" />
						</GeometryDrawing.Geometry>
					</GeometryDrawing>

					<GeometryDrawing Brush="#C0C0C0">
						<GeometryDrawing.Geometry>
							<GeometryGroup>
								<RectangleGeometry Rect="0,0,2,2" />
								<RectangleGeometry Rect="2,2,2,2" />
							</GeometryGroup>
						</GeometryDrawing.Geometry>
					</GeometryDrawing>
				</DrawingGroup>
			</DrawingBrush.Drawing>
		</DrawingBrush>

		<!-- Value Converters -->
		<wpfControlLibrary:BoolNegationConverter x:Key="BoolNegationConverter" />
		<wpfControlLibrary:NullToBoolConverter x:Key="NullToBoolConverter" />
		<wpfControlLibrary:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
		<wpfControlLibrary:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
		<wpfControlLibrary:ColorSpaceToSolidColorBrushConverter x:Key="ColorSpaceConverter" />

		<!-- Styles -->
		<Style x:Key="CommonButtonBaseStyle" TargetType="ButtonBase">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="VerticalAlignment" Value="Stretch" />
			<Setter Property="Margin" Value="3" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderThickness" Value="4" />
			<Setter Property="BorderBrush"
					Value="{Binding Source={x:Static p:Settings.Default},
														   Path=Preferences_Appearance_MidgroundColor,
														   Converter={StaticResource ColorSpaceConverter}}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ButtonBase">
						<Border Name="Border"
								Padding="{TemplateBinding Padding}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="1">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background"
										Value="{Binding Source={x:Static p:Settings.Default},
														Path=Preferences_Appearance_AccentColor,
														Converter={StaticResource ColorSpaceConverter}}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="Border" Property="BorderBrush" Value="DarkGray" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="CommonButtonStyle" BasedOn="{StaticResource CommonButtonBaseStyle}" TargetType="Button">
			<Style.Triggers>
				<Trigger Property="IsPressed" Value="True">
					<Setter Property="BorderBrush"
							Value="{Binding Source={x:Static p:Settings.Default},
																   Path=Preferences_Appearance_AccentColor,
																   Converter={StaticResource ColorSpaceConverter}}" />
					<Setter Property="Background"
							Value="{Binding Source={x:Static p:Settings.Default},
																  Path=Preferences_Appearance_MidgroundColor,
																  Converter={StaticResource ColorSpaceConverter}}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="CommonToggleButtonStyle" BasedOn="{StaticResource CommonButtonBaseStyle}" TargetType="ToggleButton">
			<Style.Triggers>
				<Trigger Property="IsPressed" Value="True">
					<Setter Property="BorderBrush"
							Value="{Binding Source={x:Static p:Settings.Default},
																   Path=Preferences_Appearance_AccentColor,
																   Converter={StaticResource ColorSpaceConverter}}" />
					<Setter Property="Background"
							Value="{Binding Source={x:Static p:Settings.Default},
																  Path=Preferences_Appearance_MidgroundColor,
																  Converter={StaticResource ColorSpaceConverter}}" />
				</Trigger>
				<Trigger Property="IsChecked" Value="False">
					<Setter Property="BorderBrush"
							Value="{Binding Source={x:Static p:Settings.Default},
																   Path=Preferences_Appearance_AccentColor,
																   Converter={StaticResource ColorSpaceConverter}}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- Data Templates -->
		<DataTemplate x:Key="AddButtonDataTemplate">
			<Grid Width="20" Height="20">
				<Line Name="Line1" X1="1" Y1="10" X2="19" Y2="10"
					  Stroke="Green" StrokeThickness="3"
					  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
				<Line Name="Line2" X1="10" Y1="1" X2="10" Y2="19"
					  Stroke="Green" StrokeThickness="3"
					  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
			</Grid>
			<DataTemplate.Triggers>
				<Trigger Property="Button.IsEnabled" Value="False">
					<Setter TargetName="Line1" Property="Stroke" Value="DarkGray" />
					<Setter TargetName="Line2" Property="Stroke" Value="DarkGray" />
				</Trigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="RemoveButtonDataTemplate">
			<Grid Width="20" Height="20">
				<Line Name="Line1" X1="1" Y1="1" X2="19" Y2="19"
					  Stroke="Red" StrokeThickness="3"
					  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
				<Line Name="Line2" X1="19" Y1="1" X2="1" Y2="19"
					  Stroke="Red" StrokeThickness="3"
					  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
			</Grid>
			<DataTemplate.Triggers>
				<Trigger Property="Button.IsEnabled" Value="False">
					<Setter TargetName="Line1" Property="Stroke" Value="DarkGray" />
					<Setter TargetName="Line2" Property="Stroke" Value="DarkGray" />
				</Trigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="RemoveButton2DataTemplate">
			<Grid Width="20" Height="20">
				<Line Name="Line1" X1="1" Y1="10" X2="19" Y2="10"
					  Stroke="Red" StrokeThickness="3"
					  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
			</Grid>
			<DataTemplate.Triggers>
				<Trigger Property="Button.IsEnabled" Value="False">
					<Setter TargetName="Line1" Property="Stroke" Value="DarkGray" />
				</Trigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="MoveUpButtonDataTemplate">
			<Viewbox Stretch="Uniform" StretchDirection="Both">
				<Grid Width="20" Height="20">
					<Line Name="Line1" X1="10" Y1="1" X2="10" Y2="19"
						  Stroke="RoyalBlue" StrokeThickness="2"
						  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
					<Line Name="Line2" X1="5" Y1="7.5" X2="10" Y2="1"
						  Stroke="RoyalBlue" StrokeThickness="2"
						  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
					<Line Name="Line3" X1="15" Y1="7.5" X2="10" Y2="1"
						  Stroke="RoyalBlue" StrokeThickness="2"
						  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
				</Grid>
			</Viewbox>
			<DataTemplate.Triggers>
				<Trigger Property="Button.IsEnabled" Value="False">
					<Setter TargetName="Line1" Property="Stroke" Value="DarkGray" />
					<Setter TargetName="Line2" Property="Stroke" Value="DarkGray" />
					<Setter TargetName="Line3" Property="Stroke" Value="DarkGray" />
				</Trigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="MoveDownButtonDataTemplate">
			<Viewbox Stretch="Uniform" StretchDirection="Both">
				<Grid Width="20" Height="20">
					<Line Name="Line1" X1="10" Y1="1" X2="10" Y2="19"
						  Stroke="RoyalBlue" StrokeThickness="2"
						  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
					<Line Name="Line2" X1="5" Y1="12.5" X2="10" Y2="19"
						  Stroke="RoyalBlue" StrokeThickness="2"
						  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
					<Line Name="Line3" X1="15" Y1="12.5" X2="10" Y2="19"
						  Stroke="RoyalBlue" StrokeThickness="2"
						  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
				</Grid>
			</Viewbox>
			<DataTemplate.Triggers>
				<Trigger Property="Button.IsEnabled" Value="False">
					<Setter TargetName="Line1" Property="Stroke" Value="DarkGray" />
					<Setter TargetName="Line2" Property="Stroke" Value="DarkGray" />
					<Setter TargetName="Line3" Property="Stroke" Value="DarkGray" />
				</Trigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<!-- Styles -->
		<Style x:Key="TextBoxValidationStyle" TargetType="{x:Type TextBox}">
			<Style.Triggers>
				<Trigger Property="Validation.HasError" Value="True">
					<Setter Property="ToolTip"
							Value="{Binding RelativeSource={x:Static RelativeSource.Self},
															   Path=(Validation.Errors)[0].ErrorContent}" />
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="Foreground" Value="Red" />
					<Setter Property="FontWeight" Value="Bold" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="CharacterSetItemContainerStyle" TargetType="ListBoxItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<Grid Name="CharacterSetGrid" Margin="3">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" SharedSizeGroup="GroupA" />
							</Grid.ColumnDefinitions>

							<Rectangle Name="CharacterSetRectangle" Grid.Column="0" Grid.ZIndex="0"
									   Width="15" Stretch="Fill" Fill="{Binding Path=MainColorBrush}" />

							<Polygon Name="CharacterSetTriangle" Grid.Column="0" Grid.ZIndex="1" Visibility="Collapsed"
									 Points="0,0 0,1 1,0.5" Stretch="Fill" Fill="{Binding Path=OverlayColorBrush}" />

							<Border Name="CharacterSetBorder" Grid.Column="1" BorderThickness="2" BorderBrush="Black">
								<TextBox Name="CharacterSetTextBox"
										 HorizontalAlignment="Stretch" HorizontalContentAlignment="Left"
										 VerticalAlignment="Stretch" VerticalContentAlignment="Center"
										 Background="White" Foreground="Black"
										 BorderThickness="0" BorderBrush="Transparent"
										 Padding="5,2" FontSize="12"
										 Text="{Binding Path=SetName}" />
							</Border>
						</Grid>

						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="CharacterSetRectangle" Property="Width" Value="25" />
								<Setter TargetName="CharacterSetBorder" Property="BorderThickness" Value="3" />
								<Setter TargetName="CharacterSetGrid" Property="Margin" Value="2" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="CharacterSetRectangle" Property="Width" Value="25" />
								<Setter TargetName="CharacterSetBorder" Property="BorderThickness" Value="3" />
								<Setter TargetName="CharacterSetGrid" Property="Margin" Value="2" />
								<Setter TargetName="CharacterSetTriangle" Property="Visibility" Value="Visible" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="CharacterDataItemContainerStyle" TargetType="ListBoxItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<Grid Name="CharacterDataGrid" Margin="3" SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Rectangle Name="CharacterDataRectangle" Grid.Column="0" Grid.ZIndex="0" Width="15" Stretch="Fill"
									   Fill="{Binding Path=CharacterSet.MainColorBrush}" />

							<Polygon Name="CharacterDataTriangle" Grid.Column="0" Grid.ZIndex="1"
									 Visibility="Collapsed" Points="0,0 0,1 1,0.5" Stretch="Fill"
									 Fill="{Binding Path=CharacterSet.OverlayColorBrush}" />

							<Border Name="CharacterDataBorder" Grid.Column="1" HorizontalAlignment="Left" BorderThickness="2"
									BorderBrush="{Binding Path=CharacterSet.MainColorBrush}">
								<Grid SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" SharedSizeGroup="Number" />
										<ColumnDefinition Width="Auto" SharedSizeGroup="Symbol" />
										<ColumnDefinition Width="*" SharedSizeGroup="Description" />
									</Grid.ColumnDefinitions>

									<TextBlock Grid.Column="0" Padding="5,2" Background="Black" Foreground="White"
											   FontFamily="Segoe UI Black" FontSize="14"
											   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
											   TextAlignment="Center" Text="{Binding Path=Number}" />

									<TextBlock Grid.Column="1" Padding="5,2" Background="White" Foreground="Black"
											   FontFamily="Segoe UI" FontWeight="Bold" FontSize="14"
											   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
											   TextAlignment="Center" Text="{Binding Path=Symbol}" />

									<TextBlock Grid.Column="2" Padding="5,2" Background="#B0B0B0" Foreground="Black"
											   FontFamily="Segoe UI" FontWeight="Regular" FontSize="12"
											   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
											   TextAlignment="Left" Text="{Binding Path=Description}" />
								</Grid>
							</Border>

							<Grid.ToolTip>
								<TextBlock FontFamily="Consolas" FontWeight="Bold" FontSize="200"
										   Foreground="{Binding Source={x:Static p:Settings.Default},
																Path=Preferences_Appearance_MidgroundColor,
																Converter={StaticResource ColorSpaceConverter}}"
										   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										   TextAlignment="Center" Text="{Binding Path=Symbol}" />
							</Grid.ToolTip>
						</Grid>

						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="CharacterDataRectangle" Property="Width" Value="25" />
								<Setter TargetName="CharacterDataBorder" Property="BorderThickness" Value="3" />
								<Setter TargetName="CharacterDataGrid" Property="Margin" Value="2" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="CharacterDataRectangle" Property="Width" Value="25" />
								<Setter TargetName="CharacterDataTriangle" Property="Visibility" Value="Visible" />
								<Setter TargetName="CharacterDataBorder" Property="BorderThickness" Value="3" />
								<Setter TargetName="CharacterDataGrid" Property="Margin" Value="2" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Application.Resources>
</Application>